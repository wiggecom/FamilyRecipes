@page
@using FamilyRecipes.Models;
@model FamilyRecipes.Pages.AddRecipeModel
@{

    ViewData["Title"] = "Home page";
    List<Models.Unit> units = Model.Units.ToList();
    Recipe EditRecipe = Model.MyRecipe;
    List<string> MainCategories = Model.Categories.Select(c => c.MainCategory).Distinct().ToList();
    List<Category> AllCategories = Model.Categories.ToList();

    string addTitle = Model.AddTitle;
    //Category AddCategory = Model.AddCategory;
    string addMainCategory = Model.AddMainCategory;
    string selectedMainCategory = "";
    string addSubCategory = Model.AddSubCategory;
    int addTimeRequired = Model.AddTimeRequired;
    int addServings = Model.AddServings;
    string addDescription = Model.AddDescription;
    List<string> addSteps = Model.AddSteps;
    List<string> allSteps = new List<string>();
    List<string> fakeSteps = new List<string> { "1. Do something", "2. Do something more", "3. Done" };
    List<RecipeIngredient> addRecipeIngredients = Model.AddRecipeIngredients;
    List<RecipeIngredient> fakeRecipeIngredients = new List<RecipeIngredient>();
    RecipeIngredient addOneIngredient = new RecipeIngredient();
    int numberOfIngredients = 3;
    bool addAdultsOnly = Model.AddAdultsOnly;
    string addImage = Model.AddImage;

}
<div class="scrollinside max80">
    <div class="text-center max80 checkered-tiles">
        <br />
        <div class="f-h1 t-neonpink">Add Recipe</div>
        <br />
        <div class="card1 card-color1 glass">
            <style scoped>
                input[type=text], textarea, select, input {
                    background-color: rgba(0,0,0,0.3);
                }

                button {
                    background-color: rgba(0,0,0,0.4);
                    border: solid 2px rgba(255,255,127,0.5);
                    color: rgba(255,255,127,0.7);
                    text-align: center;
                    padding: 5px 20px 10px 20px;
                    text-decoration: none;
                    margin-bottom: 20px;
                    cursor: pointer;
                }

                    button:active, button:hover, input[type=text]:active, input[type=text]:hover, textarea:active, textarea:hover, select:active, select:hover, input:active, input:hover {
                        background-color: rgba(0,0,0,0.7);
                        box-shadow: 3px 5px 5px rgba(0,0,0,0.8);
                        color: rgba(255,255,127,1);
                        cursor: pointer;
                    }

                    button:active, button:hover {
                        border: solid 2px rgba(255,255,127,0.7);
                    }

            </style>
            <form method="post" asp-page-handler="AddRecipe" enctype="multipart/form-data">
                <div>
                    <label class="card1-title" for="Title">Title</label><br />
                    <input class="card1-field" type="text" id="Title" name="AddTitle" 
                    placeholder="Enter Title" value="A title.." asp-for="@addTitle" />
                    <span asp-validation-for="@addTitle"></span>
                </div>
                <br />
                <hr class="hr1" />
                <label asp-for="@addMainCategory" class="card1-title">Category</label><br />
                <select asp-for="@addMainCategory" class="card1-field" id="changeMain" name="AddMainCategory">
                    <option value="">[Select Category]</option>
                    @foreach (var c in Model.AllCategories.Select(x => x.MainCategory).Distinct())
                    {
                        <option value="@c">@c</option>
                    }
                </select>

                <label asp-for="@addSubCategory" class="card1-title">Subcategory</label><br />
                <select asp-for="@addSubCategory" class="card1-field" id="addSubCategory" name="AddSubCategory">
                    <option value="">[Select Subcategory]</option>
                </select>

                <script>
                    // AJAX SubCategory Updater
                    document.getElementById("changeMain").onchange = async function handleChange(evt) {
                        const value = evt.target.value;

                        const response = await fetch('/AddRecipe?handler=GetSubcategories&mainCategory=' + encodeURIComponent(value));
                        if (response.ok) {
                            const subcategories = await response.json();

                            const subCategoryDropdown = document.getElementById("addSubCategory");
                            subCategoryDropdown.innerHTML = '<option value="">[Select Subcategory]</option>'; // Reset dropdown

                            subcategories.forEach(sub => {
                                const option = document.createElement("option");
                                option.value = sub;
                                option.text = sub;
                                subCategoryDropdown.appendChild(option);
                            });
                        } else {
                            console.error("Failed to fetch subcategories");
                        }
                    };
                </script>
                <br />
                <br />
                <hr class="hr1" />
                <div>
                    <label class="card1-title" for="addTimeRequired">Time Required (minutes)</label><br />
                    <input type="number" class="card1-field" id="addTimeRequired" name="addTimeRequired"
                           value="45" asp-for="@addTimeRequired" />
                    <span asp-validation-for="@addTimeRequired"></span>
                </div>

                <div>
                    <label class="card1-title" for="addServings">Number of Servings</label><br />
                    <input type="number" class="card1-field" id="addServings" name="addServings" value="4" 
                    asp-for="@addServings" />
                    <span asp-validation-for="@addServings"></span>
                </div>
                <br />
                <hr class="hr1"/>
                <div>
                    <label class="card1-title" for="addDescription">Description</label><br />
                    <textarea class="card1-field" id="addDescription" name="AddDescription"
                              value="A description.." asp-for="@addDescription"></textarea>
                    <span asp-validation-for="@addDescription"></span>
                </div>
                <br />
                <hr class="hr1" />
                <div>
                    <label class="card1-title">Steps</label><br />
                    <div id="stepsList">
                        <input type="text" class="card1-field" name="AddSteps" value=""
                               placeholder="No numbering needed, just instructions" asp-for="@addSteps" />
                    </div>
                    <br />
                    <button type="button" onclick="addInput()">Add Step</button>

                    <script>
                        function addInput() {
                            const container = document.getElementById('stepsList');
                            const input = document.createElement('input');
                            input.type = 'text';
                            input.name = 'AddSteps'; // Maintain consistent name for binding
                            input.className = 'card1-field fieldspacer'
                            container.appendChild(input);
                        }
                    </script>
                    <br /><br />
                </div>
                <br />
                <hr class="hr1" />
                <div>
                    <label class="card1-title" for="addImage">Add Image</label><br />
                    <textarea class="card1-field" id="addImage" name="AddImage"
                              value="An image.." asp-for="@addImage"></textarea>
                </div>
                <br />
                <hr class="hr1" />
                <div>
                    <label class="card1-title" for="AdultsOnly">Adults Only</label>
                    <input type="checkbox" id="AdultsOnly" name="AddAdultsOnly" asp-for="@addAdultsOnly" />
                </div>
                <hr class="hr1" />
                <div>
                    <label class="card1-title" for="addRecipeIngredients">Add Ingredients</label><br />
                        <label class="card1-number" for="addIngredient">Add Ingredient</label>
                        <textarea class="card1-field" id="addIngredient" name="AddRecipeIngredients"
                                  value="@fakeRecipeIngredients" asp-for="@fakeRecipeIngredients"></textarea>
                        <span asp-validation-for="@fakeRecipeIngredients"></span>
                    
                    <br /><br />
                    <button>Add More</button>
                    &nbsp;
                    <button>Done</button>
                </div>
                <br />
                <button type="submit">Save</button>
            </form>
        </div>
        <br />
    </div>
</div>
